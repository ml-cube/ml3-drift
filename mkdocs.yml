site_name: ml3-drift
site_url: https://ml-cube.github.io/ml3-drift/
site_description: Easy to embed drift detection for your ML workflows
repo_url: https://github.com/ml-cube/ml3-drift
docs_dir: md-docs
site_dir: docs
strict: true

theme:
  name: material
  icon:
    admonition:
      note: fontawesome/solid/note-sticky
      abstract: fontawesome/solid/book
      info: fontawesome/solid/circle-info
      tip: fontawesome/solid/bullhorn
      success: fontawesome/solid/check
      question: fontawesome/solid/circle-question
      warning: fontawesome/solid/triangle-exclamation
      failure: fontawesome/solid/bomb
      danger: fontawesome/solid/skull
      bug: fontawesome/solid/robot
      example: fontawesome/solid/flask
      quote: fontawesome/solid/quote-left
      code-block: material/code-tags
  features:
    - announce.dismiss
    - content.action.edit
    - content.action.view
    - content.code.annotate
    - content.code.copy
    - content.code.select
    - content.tabs.link
    - content.tooltips
    # - header.autohide
    - navigation.expand
    - navigation.footer
    # - navigation.indexes
    # - navigation.instant
    # - navigation.prune
    - navigation.sections
    - navigation.expand
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.top
    - navigation.tracking
    - search.highlight
    - search.share
    - search.suggest
    - toc.follow
    # uncomment toc.integrate to put the table of content of a page inside the left menu
    #- toc.integrate
  palette:
    primary: custom
    accent: custom
  font:
    text: Poppins
    code: Roboto Mono
  logo: assets/logo.jpg
  favicon: assets/favicon.png
extra_css:
  - stylesheets/extra.css

# Plugins
plugins:
  - search:
      separator: '[\s\-,:!=\[\]()"`/]+|\.(?!\d)|&[lg]t;|(?!\b)(?=[A-Z][a-z])'
  - minify:
      minify_html: true
  - glightbox
  - macros
  - table-reader

# Extensions
markdown_extensions:
  - abbr
  - admonition
  - attr_list
  - def_list
  - footnotes
  - md_in_html
  - tables
  - pymdownx.superfences
  - toc:
      permalink: true
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.caret
  - pymdownx.details
  - pymdownx.emoji:
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
      emoji_index: !!python/name:material.extensions.emoji.twemoji
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences
  - pymdownx.keys
  - pymdownx.magiclink:
      repo_url_shorthand: true
      user: squidfunk
      repo: mkdocs-material
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.tilde
  - pymdownx.arithmatex:
      generic: true

extra_javascript:
  - javascripts/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js

nav:
  # Getting started section:
  # The entry point for users to learn about the project and how to install it.
  # Should be enough to get an idea of what the project is about and how to use it.
  - Get Started:
    - Welcome to ml3-drift!: index.md
    - Installation: get_started/install.md

  # Concepts section:
  # This section should explain the core concepts of the project.
  # Experienced people might should not need this section.
  - Concepts:
    - Drift Detection: concepts/drift_detection.md
    - Callbacks: concepts/callbacks.md

  # Algorithms section:
  # This section has an entry for each algorithm supported by the project.
  # We should explain how it works and how to use it.
  - Algorithms:
      - KS Detector: algorithms/ks_detector.md
      - Chi-Square Detector: algorithms/cs_detector.md

  # Frameworks section:
  # This section has an entry for each framework supported by the project.
  # For each framework we provide the quantities that can be monitored
  # and snippets of code on how to do it.
  - Frameworks:
      - Overview: frameworks/overview.md
      - scikit-learn: frameworks/sklearn.md
      - transformers (Hugging Face): frameworks/transformers.md


  # Example section:
  # Some examples of how to use the project. Should be close to
  # real-world use cases, not strictly related to the algorithms or frameworks.
  - Examples:
      - Monitoring mixed data: examples/mixed_data.md
      - Monitoring text data: examples/text_data.md

  # API documentation section:
  # This section should be automatically generated from the codebase
  # according to the docstrings of each class.
  - API Documentation: api_doc.md

  # About:
  # Few words about the project and ML cube.
  - About: about.md
